version: 0.2

#env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes

phases:
  #install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    #commands:
      # - command
      # - command
  pre_build:
    commands:
      - echo Entered pre_build phase
      #Run tests and lints here if required
      # pytest
      #change this if required
  build:
    commands:
      - echo Build started on `date`
      - echo Entered the build phase ...
      #Lambda deploy reference
      #https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-deploying.html

      #Build spec reference
      #https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html

      # Package SAM template
      - sam package --template-file template.yml --s3-bucket sam-artifacts-sou --output-template-file packaged.yaml
      # Deploy packaged SAM template
      - sam deploy --template-file packaged.yaml --stack-name python-hello-world-sam-application --capabilities CAPABILITY_IAM
      # - command
      # - command
  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
  #files:
    # - location
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths